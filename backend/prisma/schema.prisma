generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

enum Priority {
  high
  medium
  low
  no_priority
}

enum ReminderType {
  on_time
  custom
}

enum RepeatType {
  none
  daily
  weekly
  monthly
  yearly
  weekdays
  weekends
  custom
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password      String?  // Make password optional for OAuth users
  role          Role     @default(user)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  // Google OAuth fields
  googleId      String?  @unique
  image         String?  // Profile image URL

  // ðŸ‘‡ Relations
  skills   Skill[]
  roadmaps Roadmap[]
  tasks    Task[]

  @@index([email])
}

model Skill {
  id        String   @id @default(uuid())
  name      String
  level     Int
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Roadmap {
  id        String   @id @default(uuid())
  title     String
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id                 String      @id @default(uuid())
  taskName           String
  priority           Priority    @default(no_priority)
  date               DateTime
  time               String
  reminder           ReminderType @default(on_time)
  reminderTimeUnit   String?
  reminderCustomDays Int?
  reminderCustomWeeks Int?
  reminderCustomTime String?
  repeat             RepeatType  @default(none)
  repeatType         String?
  repeatFrequency    String?
  repeatCount        Int?
  skipWeekends      Boolean?    @default(false)
  completed         Boolean     @default(false)
  userId            String
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
